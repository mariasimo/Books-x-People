{"version":3,"sources":["components/Loading/index.js","components/ErrorMessage/index.js","queries/index.js","components/BookList/index.js","components/Tags/index.js","components/AddBook/index.js","utils/index.js","components/Intro/index.js","components/Header/index.js","components/SocialSharing/index.js","components/ThankYou/index.js","components/BookDetails/index.js","components/SearchBook/index.js","components/Publisbook/index.js","App.js","serviceWorker.js","index.js"],"names":["Loading","ErrorMessage","GET_BOOKS","gql","GET_TAGS","ADD_BOOK","GET_BOOK_DETAILS","APPROVE_BOOK","BookItem","name","width","author","height","id","getSelected","tags","pickedBook","selectedTags","queryTag","factor","length","fontSize","replace","onClick","className","tagsIds","map","tag","allTags","Object","values","push","includes","isSelectedByTag","to","style","BookList","pathname","useState","selected","setSelected","useQuery","loading","error","data","books","sort","a","b","createdAt","localeCompare","book","key","TagList","handleTagSelection","tagList","setTagList","useEffect","idx","type","value","e","forEach","target","isChecked","checked","filteredTags","filter","checkTag","htmlFor","AddBook","history","useMutation","addBook","comment","recommendedBy","state","setState","o","j","x","i","parseInt","Math","random","shuffle","slice","sendMail","mailData","console","log","axios","post","process","onSubmit","preventDefault","bookSize","floor","variables","moderated","published","refetchQueries","query","then","bookSubmitted","handleSubmit","required","onChange","placeholder","rows","Intro","Header","src","alt","SocialSharing","href","ThankYou","BookDetails","match","params","bookId","SearchBook","PublishBook","approveBook","withRouter","location","queryTagObject","queryString","parse","search","setSelectedTags","path","exact","component","render","props","Boolean","window","hostname","client","ApolloClient","uri","REACT_APP_GRAPHQL_URL","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8b3b8c97.chunk.js","sourcesContent":["const Loading = () => {\n    return \"Fetching data...\"\n}\n\nexport default Loading\n\n\n\n","const ErrorMessage = () => {\n    return \"Sorry. There is not data available right now. Please try later\"\n}\n\nexport default ErrorMessage\n","// GraphQL Query Language looks like JS but is not\n// So we need help to parse it \nimport { gql } from 'apollo-boost'\n\nconst GET_BOOKS = gql`\n{\n    books {\n        name\n        id\n        author\n        width\n        height\n        createdAt\n        tags{\n            name\n            id\n        }\n    }\n}\n`\n\nconst GET_TAGS = gql`\n{\n    tags{\n        name\n        id\n    }\n}\n`\n\nconst ADD_BOOK=gql`\nmutation(\n    $name:String!, \n    $comment:String!, \n    $author: String!, \n    $recommendedBy: String!,\n    $moderated: Boolean!,\n    $published: Boolean!,\n    $width: String!,\n    $height: String!,\n    $tags: [ID!]!\n    ){\n    addBook(\n        name:$name, \n        comment:$comment, \n        author:$author, \n        recommendedBy:$recommendedBy,\n        moderated: $moderated,\n        published: $published,\n        width: $width,\n        height: $height,\n        tags: $tags\n    ){\n        id\n        name\n        comment\n        author\n        recommendedBy\n        tags{\n            name\n            id\n        }\n    }\n}\n`\nconst GET_BOOK_DETAILS=gql`\n    query($id:ID){\n        book(id:$id){\n            id\n            name\n            comment\n            author\n            recommendedBy\n            published\n            tags {\n                name\n                id\n            }\n        }\n    }\n`\n\nconst APPROVE_BOOK=gql`\nmutation(\n    $id:ID!\n    ){\n    approveBook(\n        id:$id\n    ){\n        id\n    }\n}\n`\n\nexport {\n    GET_BOOKS,\n    GET_TAGS,\n    ADD_BOOK,\n    GET_BOOK_DETAILS,\n    APPROVE_BOOK\n}","import React, {useState} from 'react'\nimport Loading from '../Loading'\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from '../ErrorMessage'\nimport  './styles.scss';\n\n// This package help us to bind apollo to our component\nimport {useQuery} from '@apollo/react-hooks';\n\n// To fetch data we need to make two steps\n// First we have to construct our query\n// * We import it from:\nimport { GET_BOOKS } from '../../queries' \n\nconst BookItem = ({name, width, author, height, id, getSelected, pickedBook, tags, selectedTags, queryTag}) => {  \n    const factor = (name.length > 25 || author.length > 25) ? .6 : .8;\n    const fontSize = width.replace('em', '')* factor + 'em';\n\n    const isSelectedByTag = tags => {\n        const tagsIds = tags.map(tag => tag.id)\n        const allTags = Object.values(selectedTags)\n        allTags.push(queryTag)\n\n        const isTagIncluded =  allTags.map(tag => {\n            return (tagsIds.includes(tag))\n        })\n        return (isTagIncluded.includes(true)) ? true : false;\n    }\n\n    return (\n        <li onClick={getSelected} className={(pickedBook === id) ? 'picked-book' : \"\", (isSelectedByTag(tags)) ? 'selected-by-tag':\"\"} >\n            <Link to={`/libro/${id}`}>\n                <div className=\"vertical-text\" style={{width:width, height: height, fontSize: fontSize}}>\n                    <span className=\"book-title\">{name}</span>\n                    <span className=\"book-author\">{author}</span>\n                </div>\n            </Link>\n        </li>\n    )\n}\n    \nconst BookList = ({selectedTags, queryTag, pathname}) => {\n    const [selected, setSelected] = useState(null)\n\n    const {loading, error, data} = useQuery(GET_BOOKS);\n    let books = data && data.books;\n\n    return (\n        !error\n            ?  !loading \n                ? books && (\n                    <ul className={`book-list ${((selectedTags.length || queryTag) && pathname.includes('/buscar-libro')) ? 'search-mode' : ''}`}>\n                        {books.sort((a,b) => b.createdAt.localeCompare(a.createdAt)).map( book => (   \n                            <BookItem \n                                {...book} \n                                key={book.id} \n                                pickedBook={selected} \n                                getSelected={() => setSelected(book.id)}\n                                selectedTags={selectedTags}\n                                queryTag={queryTag}\n                            />\n                        )\n                        )}\n                    </ul>\n                )\n                : <Loading/>\n            : <ErrorMessage/>\n        )\n}\n\nexport default BookList;\n\n\n","import React, {useState, useEffect} from 'react';\nimport './styles.scss';\n\n// Hacer que esto sean inputs, y que haya un f\nconst TagList = ({tags, handleTagSelection, queryTag}) => {\n    const [tagList, setTagList] = useState(tags)\n\n    useEffect(() => {\n        setTagList(tags)\n    });\n\n    const checkTag = (e) => {\n        tags.forEach(tag => {\n            if (tag.name === e.target.value) {\n                tag.isChecked = e.target.checked;\n            }\n        })\n        let filteredTags=tags.filter(tag => tag.isChecked === true)\n        setTagList(filteredTags)\n        return (handleTagSelection) && handleTagSelection(filteredTags.map(tag => tag.id))\n    }\n    \n    return (\n        tagList &&\n            <div className=\"tags-group\">\n              {tagList.map((tag,idx) => (\n                    <a key={tag.id}>\n                        <input \n                            type=\"checkbox\" \n                            name={tag.name} \n                            value={tag.name} \n                            id={`tag-${idx}`}  \n                            onClick={(e)=>checkTag(e)}\n                        />\n                        <label htmlFor={`tag-${idx}`} className={`tag ${(tag.isChecked || queryTag === tag.id) ? \"is-checked\" : \"\"}`}>{tag.name}</label>\n                    </a>\n                ))}\n            </div>        \n    )\n}\n\nexport default TagList\n","import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { ADD_BOOK, GET_BOOKS, GET_TAGS } from '../../queries'\nimport './styles.scss'\nimport TagList from '../Tags';\nimport {shuffle,randomWidth,randomHeight} from '../../utils'\n\nimport axios from 'axios';\n\nconst AddBook = ({history}) => {\n    const [addBook] = useMutation(ADD_BOOK)\n    const {data} = useQuery(GET_TAGS)\n    \n    const  [state, setState] = useState({\n        name: \"\",\n        author: \"\",\n        comment: \"\",\n        recommendedBy: \"\",\n        tags: []\n    })\n   \n    useEffect(() => {\n        if(data && data.tags){\n            let tags = shuffle(data.tags).slice(0,6).map(tag => tag = {...tag, isChecked: false})\n            setState({...state, tags:tags})\n        } \n    }, [data]);\n\n    const addBookSize = () => ({\n        width: randomWidth(),\n        height: randomHeight(),\n    })\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const bookSize = addBookSize()\n        const tags = state.tags.filter(tag=>tag.isChecked==true).map(tag => tag.id)\n        addBook({\n            variables: {\n                author: state.author,\n                name: state.name, \n                comment: state.comment,\n                recommendedBy: state.recommendedBy,\n                moderated: false,\n                published: false,\n                width: bookSize.width,\n                height: bookSize.height,\n                tags: tags\n\n            },\n            refetchQueries:[{query:GET_BOOKS}]\n        }) \n        .then(bookSubmitted => {\n            sendMail(bookSubmitted.data.addBook)\n            const {id} = bookSubmitted.data.addBook\n            history.push(`/gracias/${id}`)\n        })\n    }\n\n    const sendMail = mailData => {\n        console.log(mailData)\n        return axios.post(`${process.env.REACT_APP_API_URL}/send-mail`, mailData)\n    }\n\n    return (\n        <div className=\"add-book page\">\n            <form id=\"add-book\" className=\"content\" onSubmit={(e) => handleSubmit(e)}>\n                <div className=\"field\">\n                    <label>Tu nombre:</label>\n                    <input type=\"text\" required onChange={(e) => setState({...state, recommendedBy:e.target.value})}/>\n                </div>\n\n                <div className=\"field\">\n                    <label>Título del libro:</label>\n                    <input type=\"text\" required onChange={(e) => setState({...state, name:e.target.value})}/>\n                </div>\n\n                <div className=\"field\">\n                    <label>Autor:</label>\n                    <input type=\"text\" required onChange={(e) => setState({...state, author:e.target.value})}/>\n                </div>\n\n                <div className=\"field\">\n                    <fieldset>\n                        <legend>Este es un libro perfecto para...</legend>\n                        <TagList tags={state.tags}/>\n                    </fieldset>\n                    <input type=\"text\" className=\"create-tag\" placeholder=\"Añade tu propia etiqueta\"/>\n                </div>\n\n                <div className=\"field\">\n                    <label>¿Por qué lo recomiendas?</label>\n                    <textarea rows=\"5\" onChange={(e) => setState({...state, comment:e.target.value})}/>\n                </div>\n\n                <div className=\"buttons\">\n                    <Link to=\"/\" className=\"btn-line-black\">Cancelar</Link>\n                    <button className=\"btn-black\">Añadir libro</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default AddBook;","    \nexport const randomHeight = () => Math.floor(Math.random() * (95 - 80)) + 80 + '%'; \nexport const randomWidth = () => Math.floor(Math.random() * (3.75- 1.75)) + 1.75 + \"em\"; \n\nexport const shuffle = (o) => {\n        for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n        return o;\n    }\n","import React from 'react'\nimport {Link } from \"react-router-dom\";\nimport './styles.scss';\n\nconst Intro = () => {\n    return (\n      <div className=\"intro\">\n          <h1 className=\"title t1\">Books x People</h1>\n          <div className=\"content\">\n            <p>Cuando leemos,  escuchamos nuestros pensamientos en palabras de otros. Nos inspiramos, nos sentimos acompañados y hacemos viajes de interior.</p>\n            <p>En estos tiempos difíciles un libro puede ser un gran aliado. Deja aquí tu lectura recomendada.</p>\n            <p>Recomienda un libro para estos días en casa. <span className=\"b\">#YoMeQuedoEnCasa</span></p>\n          </div>\n\n          <div className=\"cta\">\n            <Link to=\"/recomendar-libro\" className=\"btn\">Añadir un libro a la estantería</Link>\n            <Link to=\"/buscar-libro\" className=\"btn-line\">Buscar libro</Link>\n          </div>         \n        </div>\n    )\n}\n\nexport default Intro\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './styles.scss'\n\nconst Header = () => {\n    return (\n        <header>\n            <Link to=\"/\">\n            <div className=\"desktop\">\n                <img src={`${process.env.REACT_APP_URL}/book-icon.svg`} alt=\"Book icon\"/>\n                    <p className=\"title t3 vertical-text\">Books x People</p>\n                <img src={`${process.env.REACT_APP_URL}/people-icon.svg`} alt=\"People icon\"/>\n            </div>\n            \n            <div className=\"mobile\">\n                <img src={`${process.env.REACT_APP_URL}/acronym.svg`} alt=\"People icon\"/>\n                <img src={`${process.env.REACT_APP_URL}/pictogram.svg`} alt=\"People icon\"/>\n            </div>\n\n            </Link>\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react'\nimport './styles.scss'\n\nconst SocialSharing = () => {\n    return (\n        <div className=\"social-sharing\">\n            <p>Compartir:</p>\n            <ul className=\"social-icons horizontal-list\">\n                <li><a href=\"/\"><img alt=\"social-sharing\" src={`${process.env.REACT_APP_URL}/whatsapp-icon.svg`}/></a></li>\n                <li><a href=\"/\"><img alt=\"social-sharing\" src={`${process.env.REACT_APP_URL}/twitter-icon.svg`}/></a></li>\n                <li><a href=\"/\"><img alt=\"social-sharing\" src={`${process.env.REACT_APP_URL}/linkedin-icon.svg`}/></a></li>\n                <li><a href=\"/\"><img alt=\"social-sharing\" src={`${process.env.REACT_APP_URL}/instagram-icon.svg`}/></a></li>\n                <li><a href=\"/\"><img alt=\"social-sharing\" src={`${process.env.REACT_APP_URL}/mail-icon.svg`}/></a></li>\n            </ul>\n        </div>\n    )\n}\n\nexport default SocialSharing\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles.scss';\nimport SocialSharing from '../SocialSharing';\n\nconst ThankYou = () => {\n    return (\n        <div className=\"thank-you container page\">\n            <div className=\"content\">\n                <h1 className=\"title t3\">Gracias por tu contribución</h1>\n                <p>En Books X People queremos que compartir sea un acto de generosidad, respeto, empatía y comunicación.</p>\n                <p>Tenemos que moderar tu participación para asegurarnos de que cumple las normas de la comunidad.</p>\n                <p>Seguro que tu libro está pronto en nuestras estanterías.</p>\n                \n                {/* I wil need later to pass via props the link to share */}\n                <SocialSharing/> \n                \n                <div className=\"go-back\">\n                    <Link to=\"/\" className=\"btn-line\">Volver</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ThankYou\n","import React from 'react';\nimport Loading from '../Loading'\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from '../ErrorMessage'\nimport './styles.scss';\n\nimport { GET_BOOK_DETAILS } from '../../queries'\nimport { useQuery } from '@apollo/react-hooks';\nimport SocialSharing from '../SocialSharing';\nimport TagList from '../Tags';\n\nconst BookDetails = ({match}) => {\n    // Anidar una desestructuración aqui para extraer directamente books?\n    const { loading, error, data } = useQuery(GET_BOOK_DETAILS, { variables: {id:match.params.bookId}})\n    const book = data && data.book;\n\n    return (\n        <div className=\"book-details page\">\n            {!error\n                ?  !loading \n                    ? book && (\n                        <div className=\"content\">\n                            <p>Recomendado por <span className=\"b\">{book.recommendedBy}</span></p>\n                            <h1 className=\"title t1\">{book.name}</h1>\n                            <h2 className=\"title t3\">{book.author}</h2>\n                           \n                            <div className=\"tags-group\">\n                                {book.tags.map((tag,idx) => (\n                                    <Link key={tag.id} to={`/buscar-libro/filtrar?tag=${tag.id}`}>\n                                        <input type=\"checkbox\" name={tag.name} value={tag.name} id={`tag-${idx}`}/>\n                                        <label htmlFor={`tag-${idx}`} className={`tag ${tag.isChecked ? \"is-checked\" : \"\"}`}>{tag.name}</label>\n                                    </Link>\n                                ))}\n                            </div>\n\n                            <p>{book.comment}</p>\n                            <div className=\"go-back\">\n                                <Link to=\"/\" className=\"btn-line\">Devolver a la estantería</Link>\n                            </div>\n                            <SocialSharing/>\n                        </div>\n                    )\n                    : <Loading/>\n                : <ErrorMessage/>\n            }\n        </div>\n    )\n}\n\nexport default BookDetails\n","import React from 'react';\nimport './styles.scss'\nimport {useQuery} from '@apollo/react-hooks';\nimport { GET_TAGS } from '../../queries' \nimport Loading from '../Loading';\nimport ErrorMessage from '../ErrorMessage';\nimport TagList from '../Tags';\n\nconst SearchBook = ({handleTagSelection, queryTag}) => {\n    const {loading, error, data} = useQuery(GET_TAGS);\n    if(error) return <ErrorMessage/>\n    if(loading) return <Loading/>    \n    const { tags } = data;\n     \n    return (\n        <div className=\"search-books page\">\n            <div className=\"content\">\n            {!error\n            ?  !loading \n                ? tags && (\n                    <form>\n                        <fieldset>\n                            <legend>Estoy buscando un libro para...</legend>\n                            <TagList queryTag={queryTag} tags={tags} handleTagSelection={(tags)=>handleTagSelection(tags)}/>\n                        </fieldset>\n                    </form>\n                )\n                : <Loading/>\n            : <ErrorMessage/>}\n            </div>\n        </div>\n    )\n}\n\nexport default SearchBook\n","import React from 'react';\nimport Loading from '../Loading'\nimport { Link } from 'react-router-dom';\nimport ErrorMessage from '../ErrorMessage'\nimport './styles.scss';\n\nimport { GET_BOOK_DETAILS, APPROVE_BOOK, GET_BOOKS } from '../../queries'\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\n\nconst PublishBook = ({match}) => {\n    const [approveBook] = useMutation(APPROVE_BOOK)\n    const { loading, error, data } = useQuery(GET_BOOK_DETAILS, { variables: {id:match.params.bookId}})\n    const book = data && data.book;\n\n    const approveThis = bookId => {\n        approveBook({\n            variables: {\n                id: match.params.bookId,\n            },\n            refetchQueries:[{query:GET_BOOKS},{query:GET_BOOK_DETAILS}]\n        }) \n    }\n    \n    return (\n        <div className=\"book-details page\">\n        {!error\n            ?  !loading \n                ? book && (\n                    <div className=\"content\">\n                        <p>Alguien ha recomendado un nuevo libro</p>\n                        <h1 className=\"title t1\">{book.name}</h1>\n                        <h2 className=\"title t3\">{book.author}</h2>\n                       \n                        <div className=\"tags-group\">\n                            {book.tags.map((tag,idx) => (\n                                <Link key={tag.id} to={`/buscar-libro/filtrar?tag=${tag.id}`}>\n                                    <input type=\"checkbox\" name={tag.name} value={tag.name} id={`tag-${idx}`}/>\n                                    <label htmlFor={`tag-${idx}`} className={`tag ${tag.isChecked ? \"is-checked\" : \"\"}`}>{tag.name}</label>\n                                </Link>\n                            ))}\n                        </div>\n\n                        <p>Este libro espera moderación para ser publicado en Books x People</p>\n                        <button className=\"btn\" onClick={() => approveThis(book.id)}>Aprobar este libro</button>\n\n                        {book.published && <p className=\"b\">Libro incluido en la estantería, ¡gracias!</p>}\n                    </div>\n                )\n                : <Loading/>\n            : <ErrorMessage/>\n        }\n    </div>\n    )\n}\n\nexport default PublishBook\n","import React, {useState} from 'react';\nimport {\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport './globalStyles/base.scss';\nimport queryString from 'query-string'\n\nimport BookList from './components/BookList'\nimport AddBook from './components/AddBook'\nimport Intro from './components/Intro';\nimport Header from './components/Header';\nimport ThankYou from './components/ThankYou';\nimport BookDetails from './components/BookDetails'\nimport SearchBook from './components/SearchBook';\nimport PublishBook from './components/Publisbook';\n\nfunction App({location}) {\n  const queryTagObject = queryString.parse(location.search);\n\n  const [selectedTags, setSelectedTags] = useState([])\n\n  const handleTagSelection = tags => {\n      setSelectedTags(tags)\n  }\n\n  return (\n    <main>\n    {location.pathname !== '/' && <Header/>}\n      <section className=\"section_1-2 section-fixed\">\n        <Switch>\n          <Route path=\"/\" exact component={Intro}/>\n          <Route path=\"/recomendar-libro\" component={AddBook}/>\n          <Route path=\"/gracias/:id\" component={ThankYou}/>\n          <Route path=\"/libro/:bookId\" render={(props) => <BookDetails {...props}/>}/>\n          <Route path=\"/buscar-libro\" render={() => <SearchBook handleTagSelection={(tags)=>handleTagSelection(tags)} queryTag={queryTagObject.tag}/>} />\n          <Route path=\"/approved/:bookId\" render={(props) => <PublishBook {...props}/>} />\n        </Switch>\n      </section>\n\n      <section className={`section_1-2 section-fixed book-list-container ${location.pathname!=='/' ? 'header-layout' : \"\"}` }>   \n      \n      <BookList selectedTags={selectedTags} queryTag={queryTagObject.tag} {...location}/>\n      \n      </section>\n\n      {/* <Footer/> */}\n      {/* <AddBook/> */}\n    </main>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from \"react-router-dom\";\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// Apollo is our graphql client\n// A Graphql client is in charge of passing request\n// between client and server\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\n// Apollo client setup\nconst client = new ApolloClient({\n  uri:process.env.REACT_APP_GRAPHQL_URL\n})\n\n// Apollo provider allow us to get the data from the data client endpooint\n// and inject into whatever is inside Apollo provider\nReactDOM.render(\n    <ApolloProvider client={client}>\n          <Router><App /></Router>\n    </ApolloProvider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}